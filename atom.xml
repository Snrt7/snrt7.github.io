<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>清沐园 | wlfsky</title>
  
  <subtitle>我们终其一生都在寻找</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wlfsky.com/"/>
  <updated>2017-12-23T06:18:26.361Z</updated>
  <id>http://wlfsky.com/</id>
  
  <author>
    <name>wlfsky</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>素数-模幂-求逆运算</title>
    <link href="http://wlfsky.com/2017/12/23/%E7%B4%A0%E6%95%B0-%E6%A8%A1%E5%B9%82-%E6%B1%82%E9%80%86%E8%BF%90%E7%AE%97/"/>
    <id>http://wlfsky.com/2017/12/23/素数-模幂-求逆运算/</id>
    <published>2017-12-23T06:04:41.000Z</published>
    <updated>2017-12-23T06:18:26.361Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者：wlfsky格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采</code></pre><a id="more"></a><hr><h4 id="生成素数"><a href="#生成素数" class="headerlink" title="生成素数"></a>生成素数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成素数 </span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 定义一个生成奇数的函数，从3开始，生成的是一个无限序列 </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">odd_iter</span><span class="params">()</span>:</span>  </span><br><span class="line">    n = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:  </span><br><span class="line">        n += <span class="number">2</span></span><br><span class="line">        <span class="keyword">yield</span> n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个筛选函数 </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">filter_</span><span class="params">(n)</span>:</span>  </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span> x : x % n &gt; <span class="number">0</span> </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 生成素数序列   </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">primes</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 返回素数2</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    <span class="comment"># 初始序列</span></span><br><span class="line">    it = odd_iter()</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="comment"># 返回序列的第一个数</span></span><br><span class="line">        n = next(it)</span><br><span class="line">        <span class="keyword">yield</span> n</span><br><span class="line">        <span class="comment"># 构造新序列</span></span><br><span class="line">        it = filter(filter_(n), it)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成素数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">suShu</span><span class="params">()</span>:</span></span><br><span class="line">    num = int(input(<span class="string">'请输入需要生成素数的位数：'</span>))</span><br><span class="line">    print(<span class="string">'正在生成素数，请稍等...'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> primes():</span><br><span class="line">        <span class="keyword">if</span> len(str(i)) == num:</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>以上为生成素数的源码，参考自：<a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431821084171d2e0f22e7cc24305ae03aa0214d0ef29000" target="_blank" rel="noopener">廖雪峰</a> 但是这个源码在生成7位以上的素数时运行速度会很慢，甚至有可能报出<em>堆栈溢出</em> 的错误，读者如果有更好的源码，希望可以分享出来哦！</p><h4 id="模幂运算"><a href="#模幂运算" class="headerlink" title="模幂运算"></a>模幂运算</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 模幂运算</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moMi</span><span class="params">()</span>:</span></span><br><span class="line">    moShu = int(input(<span class="string">'请输入模数:'</span>))</span><br><span class="line">    beiMoShu = int(input (<span class="string">'请输入被模数:'</span>))</span><br><span class="line">    ciMiShu = int(input (<span class="string">'请输入次幂数:'</span>))</span><br><span class="line">    result = beiMoShu ** ciMiShu</span><br><span class="line">    result_output = result % moShu</span><br><span class="line">    print(<span class="string">'模幂的结果为：'</span>, result_output)</span><br></pre></td></tr></table></figure><p>以上为模幂运算的源码，水平有限，难免会有错误，恳请读者谅解并指正。</p><h4 id="求逆运算"><a href="#求逆运算" class="headerlink" title="求逆运算"></a>求逆运算</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 求逆运算</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">qiuNi</span><span class="params">()</span>:</span></span><br><span class="line">    e = int(input(<span class="string">'请输入被模数：'</span>))</span><br><span class="line">    mod = int(input(<span class="string">'请输入模数：'</span>))</span><br><span class="line">    num = e</span><br><span class="line">    d = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> (num % mod) != <span class="number">1</span>:</span><br><span class="line">        d = d + <span class="number">1</span></span><br><span class="line">        num = num + e</span><br><span class="line">    print(<span class="string">'求得的逆为：'</span>, d)</span><br></pre></td></tr></table></figure><p>以上为求逆运算的源码，水平有限，难免会有错误，恳请读者谅解并指正。</p>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;作者：wlfsky
格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="密码学" scheme="http://wlfsky.com/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="http://wlfsky.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Hill密码</title>
    <link href="http://wlfsky.com/2017/12/23/Hill%E5%AF%86%E7%A0%81/"/>
    <id>http://wlfsky.com/2017/12/23/Hill密码/</id>
    <published>2017-12-23T05:38:10.000Z</published>
    <updated>2017-12-23T06:00:28.662Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者：wlfsky格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采</code></pre><a id="more"></a><hr><h4 id="Hill-密码"><a href="#Hill-密码" class="headerlink" title="Hill 密码"></a>Hill 密码</h4><p>​    多表代换密码。将明文消息按照步长m进行分组，对每一组的m个明文字母通过线性变换将其转换成m个相应的密文字母。</p><blockquote><p><strong>Hill密码体制</strong>      令m ≥ 2 是一个正整数，M=C=(Z<sub>26</sub>)<sup>m</sup>，K是定义在Z<sub>26</sub>上所有大小为m*m的可逆矩阵的集合。对任意的A∈K，定义</p><p>e<sub>A</sub>(x) = xA mod26</p><p>d<sub>A</sub>(x) = yA<sup>-1</sup> mod26</p></blockquote><p>Hill 密码能够较好地抵御基于字母出现频率的攻击方法。</p><p><strong>下面给出Hill密码的源码： </strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hill密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符列表</span></span><br><span class="line">char_list = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Encryption</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="comment"># 定义一个存放加密数据的列表</span></span><br><span class="line">    jiami_list = []</span><br><span class="line">    <span class="comment"># 加密密钥矩阵</span></span><br><span class="line">    A = [[<span class="number">8</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">5</span>],</span><br><span class="line">         [<span class="number">6</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">10</span>],</span><br><span class="line">         [<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">9</span>],</span><br><span class="line">         [<span class="number">10</span>,<span class="number">6</span>,<span class="number">11</span>,<span class="number">4</span>]]</span><br><span class="line">    <span class="comment"># 循环遍历用户输入的数据</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        <span class="comment"># 检查用户输入的数据是否在模字符串中</span></span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> char_list:</span><br><span class="line">            <span class="comment"># 寻找字符在模字符串中的具体位置</span></span><br><span class="line">            num = char_list.find(i)</span><br><span class="line">            jiami_list.append(num)</span><br><span class="line">    a_list = []</span><br><span class="line">    b_list = []</span><br><span class="line">    c_list = []</span><br><span class="line">    d_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        a = jiami_list[<span class="number">0</span>] * A[<span class="number">0</span>][i]</span><br><span class="line">        a_list.append(a)</span><br><span class="line">        b = jiami_list[<span class="number">1</span>] * A[<span class="number">1</span>][i]</span><br><span class="line">        b_list.append(b)</span><br><span class="line">        c = jiami_list[<span class="number">2</span>] * A[<span class="number">2</span>][i]</span><br><span class="line">        c_list.append(c)</span><br><span class="line">        d = jiami_list[<span class="number">3</span>] * A[<span class="number">3</span>][i]</span><br><span class="line">        d_list.append(d)</span><br><span class="line">    y1 = (a_list[<span class="number">0</span>] + b_list[<span class="number">0</span>] + c_list[<span class="number">0</span>] + d_list[<span class="number">0</span>]) % <span class="number">26</span></span><br><span class="line">    y2 = (a_list[<span class="number">1</span>] + b_list[<span class="number">1</span>] + c_list[<span class="number">1</span>] + d_list[<span class="number">1</span>]) % <span class="number">26</span></span><br><span class="line">    y3 = (a_list[<span class="number">2</span>] + b_list[<span class="number">2</span>] + c_list[<span class="number">2</span>] + d_list[<span class="number">2</span>]) % <span class="number">26</span></span><br><span class="line">    y4 = (a_list[<span class="number">3</span>] + b_list[<span class="number">3</span>] + c_list[<span class="number">3</span>] + d_list[<span class="number">3</span>]) % <span class="number">26</span></span><br><span class="line">    jiami_output = char_list[y1] + char_list[y2] + char_list[y3] + char_list[y4]</span><br><span class="line">    print(<span class="string">'加密后的数据为：'</span>, jiami_output)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="comment"># 定义一个存放解密数据的列表</span></span><br><span class="line">    jiemi_list = []</span><br><span class="line">    <span class="comment"># 解密密钥矩阵 加密矩阵的逆矩阵</span></span><br><span class="line">    A_ = [[<span class="number">23</span>, <span class="number">20</span>, <span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">         [<span class="number">2</span>, <span class="number">11</span>, <span class="number">18</span>, <span class="number">1</span>],</span><br><span class="line">         [<span class="number">2</span>, <span class="number">20</span>, <span class="number">6</span>, <span class="number">25</span>],</span><br><span class="line">         [<span class="number">25</span>, <span class="number">2</span>, <span class="number">22</span>, <span class="number">25</span>]]</span><br><span class="line">    <span class="comment"># 循环遍历用户输入的数据</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        <span class="comment"># 检查用户输入的数据是否在模字符串中</span></span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> char_list:</span><br><span class="line">            <span class="comment"># 寻找字符在模字符串中的具体位置</span></span><br><span class="line">            num = char_list.find(i)</span><br><span class="line">            jiemi_list.append(num)</span><br><span class="line">    a_list = []</span><br><span class="line">    b_list = []</span><br><span class="line">    c_list = []</span><br><span class="line">    d_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        a = jiemi_list[<span class="number">0</span>] * A_[<span class="number">0</span>][i]</span><br><span class="line">        a_list.append(a)</span><br><span class="line">        b = jiemi_list[<span class="number">1</span>] * A_[<span class="number">1</span>][i]</span><br><span class="line">        b_list.append(b)</span><br><span class="line">        c = jiemi_list[<span class="number">2</span>] * A_[<span class="number">2</span>][i]</span><br><span class="line">        c_list.append(c)</span><br><span class="line">        d = jiemi_list[<span class="number">3</span>] * A_[<span class="number">3</span>][i]</span><br><span class="line">        d_list.append(d)</span><br><span class="line">    x1 = (a_list[<span class="number">0</span>] + b_list[<span class="number">0</span>] + c_list[<span class="number">0</span>] + d_list[<span class="number">0</span>]) % <span class="number">26</span></span><br><span class="line">    x2 = (a_list[<span class="number">1</span>] + b_list[<span class="number">1</span>] + c_list[<span class="number">1</span>] + d_list[<span class="number">1</span>]) % <span class="number">26</span></span><br><span class="line">    x3 = (a_list[<span class="number">2</span>] + b_list[<span class="number">2</span>] + c_list[<span class="number">2</span>] + d_list[<span class="number">2</span>]) % <span class="number">26</span></span><br><span class="line">    x4 = (a_list[<span class="number">3</span>] + b_list[<span class="number">3</span>] + c_list[<span class="number">3</span>] + d_list[<span class="number">3</span>]) % <span class="number">26</span></span><br><span class="line">    jiemi_output = char_list[x1] + char_list[x2] + char_list[x3] + char_list[x4]</span><br><span class="line">    print(<span class="string">'解密后的数据为：'</span>, jiemi_output)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主函数</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    print(<span class="string">'欢迎使用Hill密码程序！'</span>)</span><br><span class="line">    number = input(<span class="string">'请选择您需要的操作：0--加密  1--解密  2--退出\n'</span>)</span><br><span class="line">    <span class="keyword">if</span> number == <span class="string">'0'</span>:</span><br><span class="line">        data = input(<span class="string">'请输入您需要加密的数据：\n'</span>)</span><br><span class="line">        Encryption(data)</span><br><span class="line">    <span class="keyword">elif</span> number == <span class="string">'1'</span>:</span><br><span class="line">        data = input(<span class="string">'请输入您需要解密的数据：\n'</span>)</span><br><span class="line">        Decrypt(data)</span><br><span class="line">    <span class="keyword">elif</span> number == <span class="string">'2'</span>:</span><br><span class="line">        print(<span class="string">'退出成功，感谢您的使用！'</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'您的输入有误，请重新输入！'</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>以上就是我自己编写的Hill密码的源码，水平有限，难免会有错误，恳请读者谅解并指正。</p>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;作者：wlfsky
格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="密码学" scheme="http://wlfsky.com/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="http://wlfsky.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>置换密码</title>
    <link href="http://wlfsky.com/2017/12/23/%E7%BD%AE%E6%8D%A2%E5%AF%86%E7%A0%81/"/>
    <id>http://wlfsky.com/2017/12/23/置换密码/</id>
    <published>2017-12-23T05:38:01.000Z</published>
    <updated>2017-12-23T06:01:21.738Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者：wlfsky格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采</code></pre><a id="more"></a><hr><h4 id="置换密码"><a href="#置换密码" class="headerlink" title="置换密码"></a>置换密码</h4><p>​    通过重新排列消息中元素的位置而不改变元素本身的加密方式。</p><blockquote><p><strong>置换密码体制</strong>    令m ≥ 2 是一个正整数，M=C=(Z<sub>26</sub>)<sup>m</sup>，K是Z<sub>m</sub> = {1，2，···，m}上所有可能置换构成的集合。对任意的(x<sub>1</sub>，x<sub>2</sub>，···，x<sub>m</sub>)∈M，π∈K，y<sub>1</sub>，y<sub>2</sub>，···，y<sub>m</sub>)∈C，定义</p><p>e<sub>π</sub>(x<sub>1</sub>，x<sub>2</sub>，···，x<sub>m</sub>) = (x<sub>π(1)</sub>，x<sub>π(2)</sub>，···，x<sub>π(m)</sub>)</p><p>d<sub>π</sub>(y<sub>1</sub>，y<sub>2</sub>，···，y<sub>m</sub>) = ((y<sub>π(1)</sub>)<sup>-1</sup>，(y<sub>π(2)</sub>)<sup>-1</sup>，···，(y<sub>π(m)</sub>)<sup>-1</sup>)</p></blockquote><p>其中，π和π<sup>-1</sup>互为Z<sub>m</sub>上的逆置换，m称为分组长度。密钥空间为m!。</p><p><strong>下面给出置换密码的源码：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 置换密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Encryption</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="comment"># 定义一个存放加密数据的列表</span></span><br><span class="line">    jiami_list = []</span><br><span class="line">    <span class="comment"># 定义一个置换关系 4260531 分组长度为7</span></span><br><span class="line">    pi = <span class="string">'4260531'</span></span><br><span class="line">    <span class="comment"># 将用户输入的数据7个分为一组</span></span><br><span class="line">    data_list = [data[i:i+<span class="number">7</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(data), <span class="number">7</span>)]</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> data_list:</span><br><span class="line">        <span class="comment"># 长度不足7的以 x 补全</span></span><br><span class="line">        <span class="keyword">while</span> len(data) &lt; <span class="number">7</span>:</span><br><span class="line">            data = data + <span class="string">'x'</span></span><br><span class="line">        k = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 加密置换</span></span><br><span class="line">        <span class="keyword">while</span> k &lt; <span class="number">7</span>:</span><br><span class="line">            jiami = data[int(pi[k])]</span><br><span class="line">            k = k + <span class="number">1</span></span><br><span class="line">            jiami_list.append(jiami)</span><br><span class="line">    jiami_output = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> jiami_list:</span><br><span class="line">        jiami_output = jiami_output + i</span><br><span class="line">    print(<span class="string">'加密后的数据为：'</span>, jiami_output)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="comment"># 定义一个存放解密数据的列表</span></span><br><span class="line">    jiemi_list = []</span><br><span class="line">    <span class="comment"># 置换关系 </span></span><br><span class="line">    pi = <span class="string">'3615042'</span></span><br><span class="line">    data_list = [data[i:i+<span class="number">7</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(data), <span class="number">7</span>)]</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> data_list:</span><br><span class="line">        <span class="keyword">while</span> len(data) &lt; <span class="number">7</span>:</span><br><span class="line">            data = data + <span class="string">'x'</span></span><br><span class="line">        k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> k &lt; <span class="number">7</span>:</span><br><span class="line">            jiemi = data[int(pi[k])]</span><br><span class="line">            k = k + <span class="number">1</span></span><br><span class="line">            jiemi_list.append(jiemi)</span><br><span class="line">    jiemi_output = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> jiemi_list:</span><br><span class="line">        jiemi_output = jiemi_output + i</span><br><span class="line">    print(<span class="string">'解密后的数据为：'</span>, jiemi_output)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主函数</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    print(<span class="string">'欢迎使用置换密码程序！'</span>)</span><br><span class="line">    number = input(<span class="string">'请选择您需要的操作：0--加密  1--解密  2--退出\n'</span>)</span><br><span class="line">    <span class="keyword">if</span> number == <span class="string">'0'</span>:</span><br><span class="line">        data = input(<span class="string">'请输入您需要加密的数据：\n'</span>)</span><br><span class="line">        Encryption(data)</span><br><span class="line">    <span class="keyword">elif</span> number == <span class="string">'1'</span>:</span><br><span class="line">        data = input(<span class="string">'请输入您需要解密的数据：\n'</span>)</span><br><span class="line">        Decrypt(data)</span><br><span class="line">    <span class="keyword">elif</span> number == <span class="string">'2'</span>:</span><br><span class="line">        print(<span class="string">'退出成功，感谢您的使用！'</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'您的输入有误，请重新输入！'</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>以上就是我自己编写的置换密码的源码，水平有限，难免会有错误，恳请读者谅解并指正。</p>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;作者：wlfsky
格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="密码学" scheme="http://wlfsky.com/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="http://wlfsky.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>仿射密码</title>
    <link href="http://wlfsky.com/2017/12/23/%E4%BB%BF%E5%B0%84%E5%AF%86%E7%A0%81/"/>
    <id>http://wlfsky.com/2017/12/23/仿射密码/</id>
    <published>2017-12-23T05:37:39.000Z</published>
    <updated>2017-12-23T06:00:58.467Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者：wlfsky格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采</code></pre><a id="more"></a><hr><h4 id="仿射密码"><a href="#仿射密码" class="headerlink" title="仿射密码"></a>仿射密码</h4><blockquote><p><strong>仿射密码体制</strong>    令M=C=Z<sub>26</sub>，K={(k<sub>1</sub>，k<sub>2</sub>)∈Z<sub>26</sub> <em> Z<sub>26</sub> : gcd(k<sub>1</sub>，26) = 1}。对任意的密钥</em>key* = (k<sub>1</sub>，k<sub>2</sub>)∈K，x∈M，y∈C，定义</p><p>e<sub>key</sub>(x) = (k<sub>1</sub>x + k<sub>2</sub>)mod26</p><p>d<sub>key</sub>(y) = k<sub>1</sub><sup>-1</sup>(y - k<sub>2</sub>)mod26</p></blockquote><p>其中， k<sub>1</sub><sup>-1</sup>表示 k<sub>1</sub>在Z<sub>26</sub>中的乘法逆，gcd(k<sub>1</sub>，26) = 1表示 k<sub>1</sub>与26互素。当 k<sub>1</sub> = 1时，仿射密码变成了移位密码。</p><p><strong>下面给出仿射密码的源码：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 仿射密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模字符串</span></span><br><span class="line">mod_char = <span class="string">'abcdefghijklmnopqrstuvwxyz0123456789'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Encryption</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="comment"># 定义一个存放加密数据的列表</span></span><br><span class="line">    jiami_list = []</span><br><span class="line">    <span class="comment"># 循环遍历用户输入的数据</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        <span class="comment"># 检查用户输入的数据是否在模字符串中</span></span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> mod_char:</span><br><span class="line">            <span class="comment"># 寻找字符在模字符串中的具体位置</span></span><br><span class="line">            num = mod_char.find(i)</span><br><span class="line">            <span class="comment"># 加密开始 f(x) = 17x + 18 mod36 , k1 = 17, k2 = 18, mod 36</span></span><br><span class="line">            jiami_num = (<span class="number">17</span> * num + <span class="number">18</span>) % <span class="number">36</span></span><br><span class="line">            <span class="comment"># 找到加密之后的字符</span></span><br><span class="line">            jiami_char = mod_char[jiami_num]</span><br><span class="line">            <span class="comment"># 将加密后的字符添加到加密列表中</span></span><br><span class="line">            jiami_list.append(jiami_char)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'您的输入有误，请重新输入！请输入a-z和0-9之间的字符或数字！'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 输出为一个字符串</span></span><br><span class="line">    jiami_output = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> jiami_list:</span><br><span class="line">        jiami_output = jiami_output + i</span><br><span class="line">    print(<span class="string">'加密后的数据为：'</span>, jiami_output)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="comment"># 定义一个存放解密数据的列表</span></span><br><span class="line">    jiemi_list = []</span><br><span class="line">    <span class="comment"># 循环遍历用户输入的数据</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> mod_char:</span><br><span class="line">            num = mod_char.find(i)</span><br><span class="line">            jiemi_num = (<span class="number">17</span> * (num - <span class="number">18</span>)) % <span class="number">36</span></span><br><span class="line">            jiemi_char = mod_char[jiemi_num]</span><br><span class="line">            jiemi_list.append(jiemi_char)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'您的输入有误，请重新输入！请输入a-z和0-9之间的字符或数字！'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 输出为一个字符串</span></span><br><span class="line">    jiemi_output = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> jiemi_list:</span><br><span class="line">        jiemi_output = jiemi_output + i</span><br><span class="line">    print(<span class="string">'解密后的数据为：'</span>, jiemi_output)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主函数</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    print(<span class="string">'欢迎使用仿射密码程序！'</span>)</span><br><span class="line">    number = input(<span class="string">'请选择您需要的操作：0--加密  1--解密  2--退出\n'</span>)</span><br><span class="line">    <span class="keyword">if</span> number == <span class="string">'0'</span>:</span><br><span class="line">        data = input(<span class="string">'请输入您需要加密的数据：\n'</span>)</span><br><span class="line">        Encryption(data)</span><br><span class="line">    <span class="keyword">elif</span> number == <span class="string">'1'</span>:</span><br><span class="line">        data = input(<span class="string">'请输入您需要解密的数据：\n'</span>)</span><br><span class="line">        Decrypt(data)</span><br><span class="line">    <span class="keyword">elif</span> number == <span class="string">'2'</span>:</span><br><span class="line">        print(<span class="string">'退出成功，感谢您的使用！'</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'您的输入有误，请重新输入！'</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>以上就是我自己编写的仿射密码的源码，水平有限，难免会有错误，恳请读者谅解并指正。</p>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;作者：wlfsky
格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="密码学" scheme="http://wlfsky.com/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="http://wlfsky.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>古典密码</title>
    <link href="http://wlfsky.com/2017/12/06/%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81/"/>
    <id>http://wlfsky.com/2017/12/06/古典密码/</id>
    <published>2017-12-06T11:26:40.000Z</published>
    <updated>2017-12-23T05:52:16.812Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者：wlfsky格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采</code></pre><a id="more"></a><hr><h3 id="古典密码的分类"><a href="#古典密码的分类" class="headerlink" title="古典密码的分类"></a>古典密码的分类</h3><ul><li>棋盘密码</li><li>移位密码</li><li>代换密码</li><li>维吉尼亚密码</li><li>仿射密码</li><li>置换密码</li><li>Hill 密码</li></ul><h4 id="棋盘密码"><a href="#棋盘密码" class="headerlink" title="棋盘密码"></a>棋盘密码</h4><p>​    通过将26个英文字母设法变成十位数来达到加密的目的。棋盘密码的密钥是一个5*5的棋盘，将26个英文字母放置在里面，其中字母i和j被放在同一个方格中，如下表所表示：</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">q</td><td style="text-align:center">w</td><td style="text-align:center">e</td><td style="text-align:center">r</td><td style="text-align:center">t</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">y</td><td style="text-align:center">u</td><td style="text-align:center">i/j</td><td style="text-align:center">o</td><td style="text-align:center">p</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">a</td><td style="text-align:center">s</td><td style="text-align:center">d</td><td style="text-align:center">f</td><td style="text-align:center">g</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">h</td><td style="text-align:center">k</td><td style="text-align:center">l</td><td style="text-align:center">z</td><td style="text-align:center">x</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">c</td><td style="text-align:center">v</td><td style="text-align:center">b</td><td style="text-align:center">n</td><td style="text-align:center">m</td></tr></tbody></table><h4 id="移位密码"><a href="#移位密码" class="headerlink" title="移位密码"></a>移位密码</h4><p>​    移位密码的加密对象为英文符号。移位密码采用每一字母向前推移<strong><em>key</em></strong>位的方式实现加密。换句话说，移位密码实现了26个英文字母的循环移位。当<strong><em>key=3</em></strong>时，得到的移位密码称为凯撒密码。</p><blockquote><p><strong>移位密码体制</strong>    令M=C=K=Z<sub>26</sub>。对任意的<em>key</em>∈Z<sub>26</sub>，x∈M，y∈C，定义</p><p>e<sub>key</sub>(x) = (x + key)mod26</p><p>d<sub>key</sub>(y) = (y - key)mod26</p></blockquote><p>移位密码的密钥空间大小为25。</p><h4 id="代换密码"><a href="#代换密码" class="headerlink" title="代换密码"></a>代换密码</h4><p>​    26个英文字母和Z<sub>26</sub>的元素之间可以建立一个一一对应关系，于是Z<sub>26</sub>上的任一个置换也就对应了26个英文字母表上的一个置换。因此可以借助Z<sub>26</sub>上的置换来改变英文字符的原有位置，已达到加密的目的，Z<sub>26</sub>上的置换看成了加密所需的秘钥。</p><blockquote><p><strong>代换密码体制</strong>    令M=C=Z<sub>26</sub>，K是Z<sub>26</sub>上所有可能置换构成的集合。对任意的置换π∈K，x∈M，y∈C，定义</p><p>e<sub>x</sub> = π(x)</p><p>d<sub>y</sub> = π<sup>-1</sup>(y)</p></blockquote><p>这里π和π<sub>-1</sub>互为逆置换。代换密码的密钥空间为26!。</p><h4 id="维吉尼亚密码"><a href="#维吉尼亚密码" class="headerlink" title="维吉尼亚密码"></a>维吉尼亚密码</h4><p>​    维吉尼亚密码是一种多表代换密码。</p><blockquote><p><strong>维吉尼亚密码体制</strong>     令m是一个正整数，相应地定义M=C=K=(Z<sub>26</sub>)<sup>m</sup>。对任意的密钥<em>key</em>=(k<sub>1</sub>，k<sub>2</sub>，···，k<sub>m</sub>)∈K，(x<sub>1</sub>，x<sub>2</sub>，···，x<sub>m</sub>)∈M，(y<sub>1</sub>，y<sub>2</sub>，···，y<sub>m</sub>)∈C，定义</p><p>e<sub>key</sub>(x<sub>1</sub>，x<sub>2</sub>，···，x<sub>m</sub>) = (x<sub>1</sub> + k<sub>1</sub>，x<sub>2</sub> + k<sub>2</sub>，···，x<sub>m</sub> + k<sub>m</sub>)mod26</p><p>d<sub>key</sub>(y<sub>1</sub>，y<sub>2</sub>，···，y<sub>m</sub>) = (y<sub>1</sub> + k<sub>1</sub>，y<sub>2</sub> + k<sub>2</sub>，···，y<sub>m</sub> + k<sub>m</sub>)mod26</p></blockquote><p>维吉尼亚密码的密钥空间大小为26<sup>m</sup>。</p><h4 id="仿射密码"><a href="#仿射密码" class="headerlink" title="仿射密码"></a>仿射密码</h4><p>​    仿射密码是代换密码的一个特例。</p><blockquote><p> <strong>仿射密码体制</strong>    令M=C=Z<sub>26</sub>，K={(k<sub>1</sub>，k<sub>2</sub>)∈Z<sub>26</sub> <em> Z<sub>26</sub> : gcd(k<sub>1</sub>，26) = 1}。对任意的密钥</em>key* = (k<sub>1</sub>，k<sub>2</sub>)∈K，x∈M，y∈C，定义</p><p> e<sub>key</sub>(x) = (k<sub>1</sub>x + k<sub>2</sub>)mod26</p><p> d<sub>key</sub>(y) = k<sub>1</sub><sup>-1</sup>(y - k<sub>2</sub>)mod26</p></blockquote><p>其中， k<sub>1</sub><sup>-1</sup>表示 k<sub>1</sub>在Z<sub>26</sub>中的乘法逆，gcd(k<sub>1</sub>，26) = 1表示 k<sub>1</sub>与26互素。当 k<sub>1</sub> = 1时，仿射密码变成了移位密码。</p><h4 id="置换密码"><a href="#置换密码" class="headerlink" title="置换密码"></a>置换密码</h4><p>​    通过重新排列消息中元素的位置而不改变元素本身的加密方式。</p><blockquote><p><strong>置换密码体制</strong>    令m ≥ 2 是一个正整数，M=C=(Z<sub>26</sub>)<sup>m</sup>，K是Z<sub>m</sub> = {1，2，···，m}上所有可能置换构成的集合。对任意的(x<sub>1</sub>，x<sub>2</sub>，···，x<sub>m</sub>)∈M，π∈K，y<sub>1</sub>，y<sub>2</sub>，···，y<sub>m</sub>)∈C，定义</p><p>e<sub>π</sub>(x<sub>1</sub>，x<sub>2</sub>，···，x<sub>m</sub>) = (x<sub>π(1)</sub>，x<sub>π(2)</sub>，···，x<sub>π(m)</sub>)</p><p>d<sub>π</sub>(y<sub>1</sub>，y<sub>2</sub>，···，y<sub>m</sub>) = ((y<sub>π(1)</sub>)<sup>-1</sup>，(y<sub>π(2)</sub>)<sup>-1</sup>，···，(y<sub>π(m)</sub>)<sup>-1</sup>)</p></blockquote><p>其中，π和π<sup>-1</sup>互为Z<sub>m</sub>上的逆置换，m称为分组长度。密钥空间为m!。</p><h4 id="Hill-密码"><a href="#Hill-密码" class="headerlink" title="Hill 密码"></a>Hill 密码</h4><p>​    多表代换密码。将明文消息按照步长m进行分组，对每一组的m个明文字母通过线性变换将其转换成m个相应的密文字母。</p><blockquote><p><strong>Hill密码体制</strong>      令m ≥ 2 是一个正整数，M=C=(Z<sub>26</sub>)<sup>m</sup>，K是定义在Z<sub>26</sub>上所有大小为m*m的可逆矩阵的集合。对任意的A∈K，定义</p><p>e<sub>A</sub>(x) = xA mod26</p><p>d<sub>A</sub>(x) = yA<sup>-1</sup> mod26</p></blockquote><p>Hill 密码能够较好地抵御基于字母出现频率的攻击方法。</p><h4 id="常用的密码分析攻击分为以下几类"><a href="#常用的密码分析攻击分为以下几类" class="headerlink" title="常用的密码分析攻击分为以下几类"></a>常用的密码分析攻击分为以下几类</h4><ul><li>唯密文攻击(Ciphertext—only attack)。<br>​    攻击者手中除了截获的密文外，没有其他任何辅助信息。唯密文攻击是最常见的一种密码分析类型，也是难度最大的一种。</li><li>已知明文攻击( Known – plaintext attack)。<br>  攻击者除了掌握密文，还掌握了部分明文和密文的对应关系。举例来看，如果是遵从通信协议的对话，由于协议中使用固定的关键字，如“login”“password”等，通过分析可以确定这关键字对应的密文。如果传输的是法律文件、单位通知等类型的公文，由于大部分公文有固定的格式和一些约定的文字，在截获的公文较多的条件下，可以推测出一些文字、词组对应的密文。</li><li>选择明文攻击( Chosen – plaintext attack)。<br>  攻击者知道加密算法，同时能够选择明文并得到相应明文所对应的密文。这是比较常见的一种密玛分析类型。例如，攻击者截获了有价值的密文，并获取了加密使用设备，向设备中输入任意明文可以得到对应的密文，以此为基础，攻击者尝试对有价值的密文进行破解。选择明文攻击常常被用于破解采用公开密钥密码系统加密的信息内容。</li><li>选择密文攻击( Chosen – ciphertext attack)。<br>  攻击者知道加密算法，同时可以选择密文并得到对应的明文。采用选择密文攻击这种攻击方式，攻击者的攻击目标通常是加密过程使用的密钥。基于公开密钥密码系统的数字签名，容易受到这种类型的攻击。</li></ul><h4 id="密码分析过程中采取的方法"><a href="#密码分析过程中采取的方法" class="headerlink" title="密码分析过程中采取的方法"></a>密码分析过程中采取的方法</h4><ul><li>穷举攻击法。<br>  穷举攻击法的破解思路是尝试所有的可能以找出明文或者密钥。穷举攻击法可以划分为穷举密钥和穷举明文两类。穷举密钥是指攻击者依次使用各种可能的解密密钥对截收的密文，进行试译，如果某个解密密钥能够产生有意义的明文，则判断相应的密钥就是正确的解密密钥。穷举明文是指攻击者在保持加密密钥不变的条件下，对所有可能的明文进行加密，如果某段明文加密的结果与截获的密文一致，则判断相应的明文就是发送者发送的信息。<pre><code>　　为了对抗穷举攻击，现代密码系统在设计时往往采用扩大密钥空间或者提高加密、解密算法复杂度的方法。当密钥空间扩大以后，采用穷举密钥的方法，在破解的过程中需要尝试更多的解密密钥；提高加密、解密算法的复杂度，将使攻击者无论采用穷举密钥还是穷举明文的方法对密码系统进行破解，每次破解尝试都需要付出更加高昂的计算开销6对于一个完善的现代密码系统，采用穷举攻击法进行破解需要付出的代价很可能超过密文破解产生的价值。</code></pre></li><li>统计分析法。<br>  统计分析法是通过分析明文和密文的统计规律来破解密文的一种方法。一些古典密码系统加密的信息，密文中字母及字母组合的统计规律与明文完全相同，此类密码系统容易被统计分析法破解。统计分析法首先需要获得密文的统计规律，在此基础上，将密文的统计规律与已知的明文统计规律对照比较，提取明、密文的对应关系，进而完成密文破解。<pre><code>　　要对抗统计分析攻击，密码系统在设计时应当着力避免密文和明文在统计规律上存在一致，从而使攻击者无法通过分析密文的统计规律来推断明文内容。</code></pre></li><li>数学分析法。<br>  大部分现代密码系统以数学难题作为理论基础。数学分析法是指攻击者针对密码系统的数学基础和密码学特性，利用一些已知量，如一些明文和密文的对应关系，通过数学求解破译密钥等未知量的方法。对于基于数学难题的密码系统，数学分析法是一种重要的破解手段。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;作者：wlfsky
格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="密码学" scheme="http://wlfsky.com/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="http://wlfsky.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>终于完工</title>
    <link href="http://wlfsky.com/2017/12/04/2017-12-04/"/>
    <id>http://wlfsky.com/2017/12/04/2017-12-04/</id>
    <published>2017-12-04T14:20:30.000Z</published>
    <updated>2017-12-05T02:09:54.343Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者：wlfsky格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采</code></pre><a id="more"></a><hr><h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><ul><li>本来是十二月二日网站就已经建立成功了的，但是在我上传博客的时候发生了一点 <strong>小意外</strong>，我也不知道怎么回事，终端总是报错，而且作为 <strong>英语渣渣</strong> 的我又看不懂那些错误，于是便有了我接下来两天苦逼的日子。</li><li>昨天重新下载了一个模板，然后开始修改配置以及美化之类的，一直忙到到晚上九点钟左右才配置好，我正怀着激动的心情想写篇博客纪念一下，可突然感觉网站的一个小地方好像不太符合我的口味，所以我就手欠的修改了一下配置文件，然后网站便光荣的再次挂掉了。。。</li><li>内心十万只草泥马奔过，但昨天时间已经很晚了，于是今天继续重新开始，仔仔细细，小小心心，一步一步的修改，终于在重新建好了网站，看着这个忙碌了几天的劳动成果，内心还是有点小激动的。下面放一张我目前网站的截图：<br><img src="/life/2017-12-04-网站截图.png" alt="wlfsky的网站截图"></li><li>目前网站就这样的布局了，我也在最近一段时间不打算在修改了，等之后有时间在改进一些小地方。</li></ul><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><ul><li>最近由于弄这个网站导致我都没有好好学习，所以接下来的时间里还是把重心放到学习上。</li><li>呼~     这几天好累！！！</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;作者：wlfsky
格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="碎碎念" scheme="http://wlfsky.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="碎碎念" scheme="http://wlfsky.com/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>值得庆祝的日子</title>
    <link href="http://wlfsky.com/2017/12/02/2017-12-02/"/>
    <id>http://wlfsky.com/2017/12/02/2017-12-02/</id>
    <published>2017-12-01T16:00:00.000Z</published>
    <updated>2017-12-05T02:23:58.790Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者：wlfsky格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采</code></pre><a id="more"></a><hr><p>时间戳:  2017年12月02日20 : 20</p><h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><ul><li><p>昨天睡得有点晚，今天十点多才起床，洗漱收拾之后已经十二点多了，然后匆匆吃了个饭继续来到实验室开始新的忙碌的一天。</p></li><li><p>修改排版、修改信息等等一直弄到了现在，连晚饭都没吃，但总算是将网站修改到了自己比较满意的程度，先就这样凑合着用，等放寒假有时间再改造一番，接下来的日子里将重心放到期末考试上，已经大三了，不想再挂科了。写到这里，突然想起了自己现在还挂着的大英二，内心便悲伤的像个二百斤的孩子。</p><p><img src="/life/2017-12-02-网站截图.png" alt="网站截图"></p></li></ul><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><ul><li>还有十四天就要考四级了，希望这次可以过！Fighting!!! </li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;作者：wlfsky
格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="碎碎念" scheme="http://wlfsky.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="碎碎念" scheme="http://wlfsky.com/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>梦想清单</title>
    <link href="http://wlfsky.com/2017/12/01/2017-12-01-%E6%A2%A6%E6%83%B3%E6%B8%85%E5%8D%95/"/>
    <id>http://wlfsky.com/2017/12/01/2017-12-01-梦想清单/</id>
    <published>2017-11-30T16:00:00.000Z</published>
    <updated>2017-12-05T02:11:42.134Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/dream.png" alt="dream"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="530" height="52" src="//music.163.com/outchain/player?type=2&id=5267808&auto=1&height=32"></iframe><a id="more"></a><blockquote><ul><li><p>完成自己制定的学习计划，每天坚持背单词；</p></li><li><p>一场说走就走的旅行；</p></li><li><p>拥有匀称的身材；</p></li><li><p>将自己的这个网站坚持下来；</p></li><li><p>一场轰轰烈烈的爱情（妄想）；</p></li><li><p>找到一份自己热爱的工作；</p></li><li><p>做心中最想做的事情；</p></li></ul></blockquote><p><img src="/images/wechat.png" alt="微信"></p><p><strong>轻轻点击上面的图片，然后微信扫一扫，你就认识了一个有趣的灵魂呀~</strong></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/dream.png&quot; alt=&quot;dream&quot;&gt;&lt;/p&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;530&quot; height=&quot;52&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=5267808&amp;auto=1&amp;height=32&quot;&gt;&lt;/iframe&gt;
    
    </summary>
    
      <category term="小文艺" scheme="http://wlfsky.com/categories/%E5%B0%8F%E6%96%87%E8%89%BA/"/>
    
    
      <category term="小文艺" scheme="http://wlfsky.com/tags/%E5%B0%8F%E6%96%87%E8%89%BA/"/>
    
  </entry>
  
  <entry>
    <title>建站成功</title>
    <link href="http://wlfsky.com/2017/12/01/2017-12-01/"/>
    <id>http://wlfsky.com/2017/12/01/2017-12-01/</id>
    <published>2017-11-30T16:00:00.000Z</published>
    <updated>2017-12-05T02:23:38.388Z</updated>
    
    <content type="html"><![CDATA[<pre><code>作者：wlfsky格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采</code></pre><a id="more"></a><hr><p>时间戳:  2017年12月01日21 : 32</p><h3 id="迈进了一小步"><a href="#迈进了一小步" class="headerlink" title="迈进了一小步"></a>迈进了一小步</h3><ul><li>很早之前就想建立一个网站，但因为种种原因没有得以实施，最近看知乎看到了在Github上可以托管网站，而且搭建方法也不是很复杂，所以便忙了好几天，终于把网站搭建好了。</li><li>最初想自己编写HTML/CSS/JS等文件，因为在大二时也花了一些精力学了这些技术，但是等我想撸起袖子开始我美妙的前端之旅时才发现之前学到的东西早已记不得了，而且临近期末，不能把时间都花到编写网页这件事情上，于是转念一想，便将Ctrl+C、Ctrl+V的技术用的淋漓精致，开始了我的前端之旅。</li><li>在昨天晚上和今天一天的忙忙碌碌下，终于把网站弄得有模有样了，小小的成就感油然而生。今天过的很充实，明天继续！</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;作者：wlfsky
格言：每一个不曾起舞的日子 都是对生命的辜负    ---尼采
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="碎碎念" scheme="http://wlfsky.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="碎碎念" scheme="http://wlfsky.com/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
</feed>
